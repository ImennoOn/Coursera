require("dplyr")
View(df)
groupedByDay <- df %>% group_by(date) %>% summarise(steps = mean())
groupedByDay <- df %>% group_by(date) %>% summarise(mean(steps))
View(groupedByDay)
groupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps))
groupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps)) %>% summarise(aveSteps)
groupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps)) %>% summarise(meanStepsPerDay = mean(aveSteps))
View(groupedByDay)
groupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps))
meanSteps <- groupedByDay %>%summarise(meanStepsPerDay = mean(aveSteps))
View(meanSteps)
groupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps))
View(groupedByDay)
meanSteps <- mean(dataGroupedByDay$aveSteps)
dataGroupedByDay
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps))
meanSteps <- mean(dataGroupedByDay$aveSteps)
mean(dataGroupedByDay$aveSteps)
mean(as.numeric(dataGroupedByDay$aveSteps))
View(groupedByDay)
dataGroupedByDay$aveSteps
x<-dataGroupedByDay$aveSteps
mean(x)
x<-mean(dataGroupedByDay$aveSteps, na.rm = T)
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps, na.rm = T))
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = mean(steps, na.rm = T))
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
View(groupedByDay)
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = n(steps, na.rm = T))
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = sum(steps, na.rm = T))
View(groupedByDay)
require("data.table")
require("reshape2")
require("dplyr")
dataFilePath <- paste(getwd(), "/activity.csv", sep="")
df <- read.csv(dataFilePath)
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = sum(steps, na.rm = T))
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
View(df)
View(df)
View(dataGroupedByDay)
View(dataGroupedByDay)
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = sum(steps))
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
require("ggplot2")
data("mpg")
data(mpg)
View(dataGroupedByDay)
ggplot(dataGroupedByDay, aes(date, aveSteps)) + geom_line() + geom_smooth(method = "lm")
ggplot(dataGroupedByDay, aes(date, aveSteps)) + geom_dotplot() + geom_smooth(method = "lm")
ggplot(dataGroupedByDay, aes(date, aveSteps)) + geom_dotplot()
dataGroupedByDay <- df %>% group_by(date) %>% summarise(aveSteps = sum(steps))
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
ggplot(dataGroupedByDay, aes(date, aveSteps)) + geom_dotplot()
dataGroupedByDay <- df %>% group_by(date) %>% summarise(steps = sum(steps))
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
dataGroupedByDay <- df %>% group_by(date) %>% summarise(sumSteps = sum(steps))
meanSteps <- mean(dataGroupedByDay$aveSteps, na.rm = T)
meanSteps <- mean(dataGroupedByDay$sumSteps, na.rm = T)
ggplot(dataGroupedByDay, aes(date, steps)) + geom_dotplot()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_dotplot()
View(dataGroupedByDay)
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_bar()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_point()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_point() + geom_quantile()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_boxplot()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_boxplot() + geom_quantile()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + geom_quantile()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + geom_quantile() + scale_fill_gradient(low = "blue", high = "red")
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + geom_quantile() + scale_fill_gradient(low = "blue", high = "red")
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + scale_fill_gradient(low = "blue", high = "red")
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + geom_dotplot(aes(fill="blue"))
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_point(aes(shape = 19))
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_point(aes(shape = 19)) + theme_grey()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_point() + theme_grey()
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_point() + theme_grey() + geom_histogram()
Sexpr{pi}
```{r, echo=F}
dataGroupedByDay <- df %>% group_by(date) %>% summarise(sumSteps = sum(steps))
meanSteps <- round(mean(dataGroupedByDay$sumSteps, na.rm = T),2)
library(data.table)
```{r, warning=FALSE, error=FALSE}
library(reshape2)
library(dplyr)
library(ggplot2)
```
## Loading and preprocessing the data
```{r LoadingData}
dataFilePath <- paste(getwd(), "/activity.csv", sep="")
df <- read.csv(dataFilePath)
```
## What is mean total number of steps taken per day?
```{r StepsPerDay}
dataGroupedByDay <- df %>% group_by(date) %>% summarise(sumSteps = sum(steps))
meanSteps <- round(mean(dataGroupedByDay$sumSteps, na.rm = T),2)
```
The mean of total number steps per day is `r meanSteps`
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + theme_bw()
dataGroupedByDay <- df %>% group_by(date) %>% summarise(sumSteps = sum(steps))
meanSteps <- round(mean(dataGroupedByDay$sumSteps, na.rm = T),2)
ggplot(dataGroupedByDay, aes(date, sumSteps))
+ geom_jitter()
+ theme_bw()
+ scale_x_date(labels = date_format("%m/%d"), breaks = date_breaks("week"))
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter()+ theme_bw()+ scale_x_date(labels = date_format("%m/%d"), breaks = date_breaks("week"))
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter()+ theme_bw()+ scale_x_date(labels = date_format("%m/%d"))
library(scales)
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + theme_bw() + scale_x_date(labels = date_format("%m/%d"))
View(dataGroupedByDay)
dataGroupedByDay <- df %>% group_by(date) %>% summarise(sumSteps = sum(steps)) %>% mutate(date = as.Date(date))
meanSteps <- round(mean(dataGroupedByDay$sumSteps, na.rm = T),2)
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + theme_bw() + scale_x_date(labels = date_format("%m/%d"))
View(dataGroupedByDay)
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_jitter() + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_histogram() + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_histogram() + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_bar() + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
ggplot(dataGroupedByDay) + geom_bar() + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
View(dataGroupedByDay)
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_bar() + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = "identity") + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
View(df)
bestInterval <- dataGroupedByIntervals %>% max(aveSteps)
dataGroupedByIntervals <- df %>% group_by(interval) %>% summarise(aveStaps = mean(steps))
View(dataGroupedByIntervals)
dataGroupedByIntervals <- df %>% group_by(interval) %>% summarise(aveSteps = mean(steps))
View(df)
dataGroupedByIntervals <- df %>% group_by(interval) %>% summarise(aveSteps = mean(steps))
View(dataGroupedByIntervals)
dataGroupedByIntervals <- df %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
bestInterval <- dataGroupedByIntervals %>% max(aveSteps)
bestInterval <- max(dataGroupedByIntervals, aveSteps)
bestInterval <- max(dataGroupedByIntervals, dataGroupedByIntervals$aveSteps)
bestInterval <- dataGroupedByIntervals %>% filter(aveSteps == max(dataGroupedByIntervals$aveSteps))
View(bestInterval)
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity')
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity') + scale_fill_hue() + theme_bw() +
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity') + scale_fill_hue() + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity') + scale_fill_hue() + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity') + scale_fill_brewer(palette = "Blues") + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity') + scale_fill_grey(start = 0.2, end = 0.9) + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity', aes(fill = 2)) + scale_fill_grey(start = 0.2, end = 0.9) + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity', aes(fill = "blue")) + scale_fill_grey(start = 0.2, end = 0.9) + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity') + scale_fill_gradient() + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity') + scale_fill_gradient() + theme_bw()
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity')+ theme_bw()
View(dataGroupedByIntervals)
bestInterval[[1]]
Interval contains maximun of average steps is `r as.numeric(bestInterval[[1]])`
sum(is.na(df))
isNa <- is.na(df$steps)
completeCases <- complete.cases(df)
sum(completeCases == TRUE)
sum(completeCases == FALSE)
install.packages('zoo')
require("zoo")
completeCases <- complete.cases(df)
df %>% mutate(steps = na.approx(steps)) #or use na.spline()
na.approx(df$steps)
df <- read.csv(dataFilePath)
na.approx(df$steps)
filledDf <- df %>% mutate(steps = na.approx(steps)) #or use na.spline()
filledDf <- df  #or use na.spline()
filledDf$steps <- na.approx(filledDf$steps)  #or use na.spline()
x <- na.approx(filledDf$steps)
x <- na.spline(filledDf$steps)
filledDf <- df
filledDf$steps <- na.spline(filledDf$steps)  #or use na.spline()
dataGroupedByIntervals <- filledDf %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
require("zoo")
filledDf <- df
filledDf$steps <- na.spline(filledDf$steps)  #or use na.spline()
dataGroupedByIntervals <- filledDf %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
ggplot(dataGroupedByIntervals, aes(interval, aveSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
dataGroupedByDay <- filledDf %>% group_by(date) %>% summarise(sumSteps = sum(steps)) %>% mutate(date = as.Date(date))
dataGroupedByDay <- filledDf %>% group_by(date) %>% summarise(sumSteps = sum(steps)) %>% mutate(date = as.Date(date))
ggplot(dataGroupedByDay, aes(interval, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
View(dataGroupedByDay)
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
filledDf$steps <- na.locf(filledDf$steps)  #or use na.spline()
dataGroupedByDay <- filledDf %>% group_by(date) %>% summarise(sumSteps = sum(steps)) %>% mutate(date = as.Date(date))
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
```
ggplot(dataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
filledDf$steps <- na.locf(filledDf$steps)  #or use na.spline()
ggplot(fixedDataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
require("zoo")
filledDf <- df
filledDf$steps <- na.spline(filledDf$steps)  #or use na.spline()
fixedDataGroupedByDay <- filledDf %>% group_by(date) %>% summarise(sumSteps = sum(steps)) %>% mutate(date = as.Date(date))
```{r}
ggplot(fixedDataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
ggplot(fixedDataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
ggplot(fixedDataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps") + ylim(0, 25000)
ggplot(fixedDataGroupedByDay, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Steps") + ylim(0, 25000)
View(df)
df <- read.csv(dataFilePath)
filledDf <- df
filledDf <- filledDf %>% group_by(date)
View(filledDf)
View(df)
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.spline(steps))
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.spline(steps))
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.locf(steps))
filledDf <- df
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.locf(steps))
source('~/.active-rstudio-document', echo=TRUE)
filledDf <- df
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.locf(steps))
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.approx(steps))
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.spline(steps))
filledDf <- filledDf %>% group_by(interval) %>% mutate(date = as.Date(date), steps = na.spline(steps))
fixedDataGroupedByDay <- filledDf %>% summarise(sumSteps = sum(steps))
View(fixedDataGroupedByDay)
filledDf <- df
fixedDataGroupedByInterval <- filledDf %>% group_by(interval) %>% mutate(date = as.Date(date), steps = na.spline(steps))
fixedDataGroupedByInterval %>% summarise(sumSteps = sum(steps))
plotData <- fixedDataGroupedByInterval %>% summarise(sumSteps = sum(steps))
ggplot(plotData, aes(date, sumSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Steps") + ylim(0, 25000)
View(plotData)
plotData <- fixedDataGroupedByInterval %>% summarise(aveSteps = mean(steps))
ggplot(plotData, aes(interval, aveSteps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
filledDf$steps <- na.spline(filledDf$steps)
ggplot(filledDf, aes(interval, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
filledDf <- filledDf %>% group_by(date)
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.spline(steps))
ggplot(filledDf, aes(interval, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
ggplot(filledDf, aes(date, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
ggplot(filledDf, aes(interval, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
filledDf <- df
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.spline(steps))
filledDf <- df
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.spline(steps))
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.spline(steps))
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.spline(steps))
ggplot(filledDf, aes(interval, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
filledDf <- df
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.locf(steps))
filledDf <- filledDf %>% group_by(interval) %>% mutate(steps = na.locf(steps, maxgap = 5))
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.locf(steps, maxgap = 5))
filledDf <- df
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.locf(steps, maxgap = 5))
filledDf <- filledDf %>% group_by(date) %>% mutate(steps = na.approx(steps, maxgap = 5))
filledDf <- filledDf %>% group_by(date) %>% filter(sum(steps)==0))
filledDf <- filledDf %>% group_by(date) %>% filter(sum(steps)==0)
View(filledDf)
filledDf <- df
filledDf %>% group_by(date) %>% filter(sum(steps)==0)
filledDf <- df
filledDf %>% group_by(date) %>% mutate(steps = if(is.na(steps)) mean(steps) else steps)
filledDf %>% group_by(date) %>% mutate(steps = if(is.na(steps)) 1 else steps)
filledDf$steps <- na.approx(filledDf$steps)
filledDf$steps <- na.approx(filledDf$steps, na.rm = T)
filledDf$steps <- na.approx(filledDf$steps, maxgap = 5, na.rm = T)
View(filledDf)
filledDf <- df[2:length(df),]
View(filledDf)
filledDf <- df[2:length(df$steps),]
filledDf$steps <- na.approx(filledDf$steps, maxgap = 5, na.rm = T)
filledDf <- df[2:length(df$steps),]
filledDf$steps <- na.approx(filledDf$steps, maxgap = 5, na.rm = T)
filledDf <- df[5:length(df$steps),]
filledDf$steps <- na.approx(filledDf$steps, maxgap = 5, na.rm = T)
filledDf <- df[0:length(df$steps),]
filledDf$steps <- na.approx(filledDf$steps, maxgap = 5, na.rm = T)
filledDf <- df[2:length(df$steps),]
filledDf$steps <- na.spline(filledDf$steps, maxgap = 5, na.rm = T)
filledDf <- df
filledDf$steps <- na.spline(filledDf$steps)
ggplot(filledDf, aes(interval, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
ggplot(filledDf, aes(date, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Interval #") + ylab("Average steps")
filter(filledDf, steps < 0)
filter(filledDf, steps < 0)$steps <- 0
filledDf %>% filter(steps < 0) %>% mutate(steps = 0)
filledDf %>% filter(steps < 0)
filledDf %>% filter(steps < 0) <- rep(0, length(filledDf %>% filter(steps < 0)))
filledDf <- df
filledDf$steps <- na.spline(filledDf$steps)
ggplot(filledDf, aes(date, steps)) + geom_bar(stat = 'identity')+ theme_bw() + xlab("Date") + ylab("Average steps")
ggplot(filledDf, aes(date, steps)) + geom_bar(stat = 'identity')+ theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
ggplot(filledDf, aes(date, steps)) + geom_bar(stat = 'identity') + theme_bw() + scale_x_date(labels = date_format("%m/%d")) + xlab("Date") + ylab("Steps")
filledDf$date <- as.Date(filledDf$date)
ggplot(filledDf, aes(date, steps)) + geom_bar(stat = 'identity') + theme_bw() + scale_x_date(labels = date_format("%m/%d")) + xlab("Date") + ylab("Steps")
packages <- c("data.table", "ggplot2", "dplyr")
sappy(packages, require, character.only = T, quielty = T)
sapply(packages, require, character.only = T, quielty = T)
sapply(packages, require, character.only=TRUE, quietly=TRUE)
packages <- c("data.table", "ggplot2", "dplyr")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
dataFilePath <- paste(getwd(), "/activity.csv", sep="")
df <- read.csv(dataFilePath)
dt <- df[,date=as.Date(date)]
dt <- data.table(read.csv(dataFilePath))
dt <- df[,date=as.Date(date)]
dt <- df[,date:=as.Date(date)]
dt <- data.table(read.csv(dataFilePath))
dt <- dt[, date := as.Date(date)]
dt <- dt[, date = as.Date(date)]
dt <- dt[, date := as.Date(date)]
setkey(dt, date, interval)
str(dt)
dtDaily <- dt[, list(sumSteps = sum(steps)), date]
head(dtDaily)
View(dtDaily)
dailyData <- dt %>% group_by(date) %>% summarise(sumSteps = sum(steps))
View(dailyData)
meanSteps <- round(mean(dailyData$sumSteps, na.rm = T),2)
ggplot(dailyData, aes(sumSteps)) + geom_histogram() + theme_bw() + scale_x_date(labels = date_format("%m/%d")) +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(sumSteps)) + geom_histogram() + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(sumSteps)) + geom_histogram(alpha=0.5, bandwidth=1000) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(sumSteps)) + geom_histogram(alpha=0.5, bandwidth=1000) + theme_bw() +xlab("Date") + ylab("-")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(alpha=1/2, binwidth=1000) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(alpha=1/2, binwidth=100) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(alpha=1/2, binwidth=500) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(alpha=1/2, binwidth=200) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(alpha=1/2, binwidth=400) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(alpha=1/2, binwidth=400) + theme_bw() +xlab("Date") + ylab("Steps") + geom_smooth()
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(alpha=1/2, binwidth=400) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(binwidth=400) + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(binwidth=400, fill = "red") + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(binwidth=400, fill = "blue") + theme_bw() +xlab("Date") + ylab("Steps")
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(binwidth=400, fill = "darkblue") + theme_bw() +xlab("Date") + ylab("Steps")
meanSteps <- round(mean(dailyData$sumSteps, na.rm = T),2)
medianSteps <- round(median(dailyData$sumSteps, na.rm = T),2)
ggplot(dtIntervals, aes(x=interval, y=meanSteps)) + geom_line()
ggplot(dataGroupedByIntervals, aes(x=interval, y=meanSteps)) + geom_line()
ggplot(dataGroupedByIntervals, aes(x=interval, y=aveSteps)) + geom_line()
dataGroupedByIntervals <- df %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
bestInterval <- dataGroupedByIntervals %>% filter(aveSteps == max(dataGroupedByIntervals$aveSteps))
View(bestInterval)
ggplot(dataGroupedByIntervals, aes(x=interval, y=aveSteps)) + geom_line()
ggplot(dataGroupedByIntervals, aes(x=interval, y=aveSteps)) + geom_line() + theme_bw() + xlab("Interval #") + ylab("Average steps")
ggplot(dataGroupedByIntervals, aes(x=interval, y=aveSteps)) + geom_area(fill="darkblue") + theme_bw() + xlab("Interval #") + ylab("Average steps")
packages <- c("data.table", "ggplot2", "dplyr", "VIM")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
install.packages("VIM")
dt <- dt %>% mutate(date = as.Date(date))
setkey(dt, date, interval)
dt <- kNN(dt)
packages <- c("data.table", "ggplot2", "dplyr", "VIM")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
dt <- kNN(dt)
dt <- kNN(dt)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(dataGroupedByIntervals, aes(x=interval, y=aveSteps)) + geom_area(fill="darkblue") + theme_bw() + xlab("Interval #") + ylab("Average steps")
dataGroupedByIntervals <- df %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
packages <- c("data.table", "ggplot2", "dplyr", "VIM")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
dataFilePath <- paste(getwd(), "/activity.csv", sep="")
dt <- data.table(read.csv(dataFilePath))
dt <- dt %>% mutate(date = as.Date(date))
setkey(dt, date, interval)
dailyData <- dt %>% group_by(date) %>% summarise(sumSteps = sum(steps))
meanSteps <- round(mean(dailyData$sumSteps, na.rm = T),2)
medianSteps <- round(median(dailyData$sumSteps, na.rm = T),2)
ggplot(dailyData, aes(x=sumSteps)) + geom_histogram(binwidth=400, fill = "darkblue") + theme_bw() +xlab("Date") + ylab("Steps")
```
dataGroupedByIntervals <- df %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
dataGroupedByIntervals <- dt %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
bestInterval <- dataGroupedByIntervals %>% filter(aveSteps == max(dataGroupedByIntervals$aveSteps))
ggplot(dataGroupedByIntervals, aes(x=interval, y=aveSteps)) + geom_area(fill="darkblue") + theme_bw() + xlab("Interval #") + ylab("Average steps")
dt <- kNN(dt)
dt <- dt[, isStepsMissing := is.na(steps)]
dt <- kNN(dt)
dt <- dt[, isStepsMissing := is.na(steps)]
dt <- kNN(dt)
dt <- kNN(dt$steps)
dt <- kNN(dt$steps)
View(dt)
dt <- data.table(read.csv(dataFilePath))
dt$steps <- kNN(dt$steps)
kNN(dt$steps)
head(kNN(dt$steps))
head(kNN(dt$steps))
tail(kNN(dt$steps))
kNN(dt$steps)
kNN(dt)
dt$steps <- kNN(dt$steps)
x <- kNN(dt$steps)
View(x)
dataGroupedByIntervals <- dt %>% group_by(interval) %>% summarise(aveSteps = mean(steps, na.rm = T))
bestInterval <- dataGroupedByIntervals %>% filter(aveSteps == max(dataGroupedByIntervals$aveSteps))
fixedDt <- dt
for (i in 1:nrow(fixedDt)) {
if (is.na(fixedDt$steps[i])) {
fixedDt$steps[i] <- dataGroupedByIntervals[which(fixedDt$interval[i] == dataGroupedByIntervals$interval), ]$aveSteps
}
}
head(newData)
head(fixedDt)
sum(is.na(newData))
sum(is.na(fixedDt))
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
colour = "darkblue",
fill = "blue",
width = 0.4) + facet_grid(. ~ month, scales = "free") + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps")
View(fixedDt)
width = 0.4) + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps")
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
colour = "darkblue",
fill = "blue",
width = 0.4) + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps")
width = 0.4) + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps") + scale_x_date(labels = date_format("%m/%d"), breaks = "week")
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
colour = "darkblue",
fill = "blue",
width = 0.4) + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps") + scale_x_date(labels = date_format("%m/%d"), breaks = "week")
```
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
colour = "darkblue",
fill = "blue",
width = 0.4) + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps") + scale_x_date(labels = date_format("%m/%d"), breaks = "week")
dataFilePath <- paste(getwd(), "/activity.csv", sep="")
dt <- data.table(read.csv(dataFilePath))
dt <- dt %>% mutate(date = as.Date(date))
setkey(dt, date, interval)
fixedDt <- dt
for (i in 1:nrow(fixedDt)) {
if (is.na(fixedDt$steps[i])) {
fixedDt$steps[i] <- dataGroupedByIntervals[which(fixedDt$interval[i] == dataGroupedByIntervals$interval), ]$aveSteps
}
}
sum(is.na(fixedDt))
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
colour = "darkblue",
fill = "blue",
width = 0.4) + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps") + scale_x_date(labels = date_format("%m/%d"), breaks = "week")
levels <- c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
newLevels <- c("Weekend", rep("Weekday", 5), "Weekend")
dt <- dt[, dayOfWeek := factor(weekdays(date), levels=levels)]
dt <- dt[, dayType := factor(newLevels[dayOfWeek])]
dt <- dt %>% mutate(dayOfWeek = factor(weekdays(date), levels=levels))
View(dt)
dt <- dt %>% mutate(dayType = factor(newLevels[dayOfWeek]))
dt[, .N, list(dayType, dayOfWeek)]
message(sprintf("Is dayOfWeek a factor? %s. Is dayType a factor? %s", is.factor(dt$dayOfWeek), is.factor(dt$dayType)))
dtIntervals <- dt[, list(meanSteps = mean(steps, na.rm=TRUE)), list(dayType, interval)]
ggplot(dtIntervals, aes(x=interval, y=meanSteps, color=dayType)) +
geom_line() +
facet_wrap(~ dayType, nrow=2) +
theme(legend.position="none")
ggplot(dtIntervals, aes(x=interval, y=meanSteps, color=dayType)) +
geom_line() +
theme(legend.position="bottom")
dataFilePath <- paste(getwd(), "/activity.csv", sep="")
dt <- data.table(read.csv(dataFilePath))
dt <- dt %>% mutate(date = as.Date(date))
setkey(dt, date, interval)
fixedDt <- dt
for (i in 1:nrow(fixedDt)) {
if (is.na(fixedDt$steps[i])) {
fixedDt$steps[i] <- dataGroupedByIntervals[which(fixedDt$interval[i] == dataGroupedByIntervals$interval), ]$aveSteps
}
}
sum(is.na(fixedDt))
fixedDt$weekdays <- factor(format(fixedDt$date, "%A"))
levels(fixedDt$weekdays)
levels(fixedDt$weekdays) <- list(weekday = c("Monday", "Tuesday",
"Wednesday",
"Thursday", "Friday"),
weekend = c("Saturday", "Sunday"))
avgSteps <- aggregate(fixedDt$steps,
list(interval = as.numeric(as.character(fixedDt$interval)),
weekdays = fixedDt$weekdays),
FUN = "mean")
names(avgSteps)[3] <- "meanOfSteps"
View(avgSteps)
fixedDt$weekdays <- factor(format(fixedDt$date, "%A"))
levels(fixedDt$weekdays)
levels(fixedDt$weekdays) <- list(weekday = c("понедельник", "вторник",
"среда",
"четверг", "пятница"),
weekend = c("суббота", "воскресенье"))
avgSteps <- aggregate(fixedDt$steps,
list(interval = as.numeric(as.character(fixedDt$interval)),
weekdays = fixedDt$weekdays),
FUN = "mean")
names(avgSteps)[3] <- "meanOfSteps"
View(avgSteps)
View(avgSteps)
View(avgSteps)
ggplot(avgSteps, aes(x=interval, y=meanOfSteps, color=weekdays)) +
geom_line() +
facet_wrap(~ weekdays, nrow=2) +
theme(legend.position="none")
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
colour = "darkblue",
fill = "blue",
width = 0.4) + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps") + scale_x_date(labels = date_format("%m/%d"), breaks = "week")
ggplot(fixedDt, aes(date, steps)) + geom_bar(stat = "identity",
colour = "darkblue",
fill = "blue") + labs(title = "Histogram of Total Number of Steps", x = "Date", y = "Steps") + scale_x_date(labels = date_format("%m/%d"), breaks = "week")
```
packages <- c("data.table", "ggplot2", "dplyr", "scales"")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
packages <- c("data.table", "ggplot2", "dplyr", "scales"")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
packages <- c("data.table", "ggplot2", "dplyr", "scales")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
packages <- c("data.table", "ggplot2", "dplyr", "scales")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
ggplot(avgSteps, aes(x=interval, y=meanOfSteps, color=weekdays)) + geom_line() + facet_wrap(~ weekdays, nrow=2) + xlab("Interval #") + ylab("Average steps")
ggplot(avgSteps, aes(x=interval, y=meanOfSteps, color=weekdays)) + geom_line() + facet_wrap(~ weekdays, nrow=2) +	theme(legend.position="none") + xlab("Interval #") + ylab("Average steps")
